//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MembershipCatEntities : DbContext
    {
        public MembershipCatEntities()
            : base("name=MembershipCatEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<FamilyMember> FamilyMembers { get; set; }
        public virtual DbSet<MembershipCategory> MembershipCategories { get; set; }
        public virtual DbSet<MembershipBenefit> MembershipBenefits { get; set; }
        public virtual DbSet<MembershipDuration> MembershipDurations { get; set; }
        public virtual DbSet<MemberRegister> MemberRegisters { get; set; }
        public virtual DbSet<MasterBloodGroup> MasterBloodGroups { get; set; }
        public virtual DbSet<tblActerActressList> tblActerActressLists { get; set; }
    
        public virtual ObjectResult<AddUpdateDeleteMembershipCategory_Result> AddUpdateDeleteMembershipCategory(string pMembershipName, string pCategoryType, string pDescription, string pDurationName, Nullable<int> pDurationDays, string pMembershipPrefixCode, Nullable<int> pMembershipCategoryId, Nullable<int> pDurationId, Nullable<decimal> pFees, Nullable<decimal> pCreditLimit, Nullable<decimal> pMaxAdult, Nullable<decimal> pMaxChild, string pFlag)
        {
            var pMembershipNameParameter = pMembershipName != null ?
                new ObjectParameter("pMembershipName", pMembershipName) :
                new ObjectParameter("pMembershipName", typeof(string));
    
            var pCategoryTypeParameter = pCategoryType != null ?
                new ObjectParameter("pCategoryType", pCategoryType) :
                new ObjectParameter("pCategoryType", typeof(string));
    
            var pDescriptionParameter = pDescription != null ?
                new ObjectParameter("pDescription", pDescription) :
                new ObjectParameter("pDescription", typeof(string));
    
            var pDurationNameParameter = pDurationName != null ?
                new ObjectParameter("pDurationName", pDurationName) :
                new ObjectParameter("pDurationName", typeof(string));
    
            var pDurationDaysParameter = pDurationDays.HasValue ?
                new ObjectParameter("pDurationDays", pDurationDays) :
                new ObjectParameter("pDurationDays", typeof(int));
    
            var pMembershipPrefixCodeParameter = pMembershipPrefixCode != null ?
                new ObjectParameter("pMembershipPrefixCode", pMembershipPrefixCode) :
                new ObjectParameter("pMembershipPrefixCode", typeof(string));
    
            var pMembershipCategoryIdParameter = pMembershipCategoryId.HasValue ?
                new ObjectParameter("pMembershipCategoryId", pMembershipCategoryId) :
                new ObjectParameter("pMembershipCategoryId", typeof(int));
    
            var pDurationIdParameter = pDurationId.HasValue ?
                new ObjectParameter("pDurationId", pDurationId) :
                new ObjectParameter("pDurationId", typeof(int));
    
            var pFeesParameter = pFees.HasValue ?
                new ObjectParameter("pFees", pFees) :
                new ObjectParameter("pFees", typeof(decimal));
    
            var pCreditLimitParameter = pCreditLimit.HasValue ?
                new ObjectParameter("pCreditLimit", pCreditLimit) :
                new ObjectParameter("pCreditLimit", typeof(decimal));
    
            var pMaxAdultParameter = pMaxAdult.HasValue ?
                new ObjectParameter("pMaxAdult", pMaxAdult) :
                new ObjectParameter("pMaxAdult", typeof(decimal));
    
            var pMaxChildParameter = pMaxChild.HasValue ?
                new ObjectParameter("pMaxChild", pMaxChild) :
                new ObjectParameter("pMaxChild", typeof(decimal));
    
            var pFlagParameter = pFlag != null ?
                new ObjectParameter("pFlag", pFlag) :
                new ObjectParameter("pFlag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddUpdateDeleteMembershipCategory_Result>("AddUpdateDeleteMembershipCategory", pMembershipNameParameter, pCategoryTypeParameter, pDescriptionParameter, pDurationNameParameter, pDurationDaysParameter, pMembershipPrefixCodeParameter, pMembershipCategoryIdParameter, pDurationIdParameter, pFeesParameter, pCreditLimitParameter, pMaxAdultParameter, pMaxChildParameter, pFlagParameter);
        }
    
        public virtual ObjectResult<GetMembeshipCategoryAndDuration_Result> GetMembeshipCategoryAndDuration(Nullable<int> pMembershipId, string pFlag)
        {
            var pMembershipIdParameter = pMembershipId.HasValue ?
                new ObjectParameter("pMembershipId", pMembershipId) :
                new ObjectParameter("pMembershipId", typeof(int));
    
            var pFlagParameter = pFlag != null ?
                new ObjectParameter("pFlag", pFlag) :
                new ObjectParameter("pFlag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMembeshipCategoryAndDuration_Result>("GetMembeshipCategoryAndDuration", pMembershipIdParameter, pFlagParameter);
        }
    
        public virtual ObjectResult<GetMembeshipDetails_Result> GetMembeshipDetails(Nullable<int> pMembershipCategoryId, Nullable<int> pMembershipTypeId, string pFlag)
        {
            var pMembershipCategoryIdParameter = pMembershipCategoryId.HasValue ?
                new ObjectParameter("pMembershipCategoryId", pMembershipCategoryId) :
                new ObjectParameter("pMembershipCategoryId", typeof(int));
    
            var pMembershipTypeIdParameter = pMembershipTypeId.HasValue ?
                new ObjectParameter("pMembershipTypeId", pMembershipTypeId) :
                new ObjectParameter("pMembershipTypeId", typeof(int));
    
            var pFlagParameter = pFlag != null ?
                new ObjectParameter("pFlag", pFlag) :
                new ObjectParameter("pFlag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMembeshipDetails_Result>("GetMembeshipDetails", pMembershipCategoryIdParameter, pMembershipTypeIdParameter, pFlagParameter);
        }
    
        public virtual ObjectResult<GetMasterTypes_Result> GetMasterTypes(string pFlag)
        {
            var pFlagParameter = pFlag != null ?
                new ObjectParameter("pFlag", pFlag) :
                new ObjectParameter("pFlag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMasterTypes_Result>("GetMasterTypes", pFlagParameter);
        }
    
        public virtual ObjectResult<spDeleteMembershipDetails_Result> spDeleteMembershipDetails(Nullable<int> pId, string pFlag)
        {
            var pIdParameter = pId.HasValue ?
                new ObjectParameter("pId", pId) :
                new ObjectParameter("pId", typeof(int));
    
            var pFlagParameter = pFlag != null ?
                new ObjectParameter("pFlag", pFlag) :
                new ObjectParameter("pFlag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDeleteMembershipDetails_Result>("spDeleteMembershipDetails", pIdParameter, pFlagParameter);
        }
    
        public virtual ObjectResult<spGetActorActressImageDetails_Result> spGetActorActressImageDetails(string pFlag, string pSortType, Nullable<int> pageNo, Nullable<int> pageSize, string sortColumn, string sortOrder, ObjectParameter pTotalCount)
        {
            var pFlagParameter = pFlag != null ?
                new ObjectParameter("pFlag", pFlag) :
                new ObjectParameter("pFlag", typeof(string));
    
            var pSortTypeParameter = pSortType != null ?
                new ObjectParameter("pSortType", pSortType) :
                new ObjectParameter("pSortType", typeof(string));
    
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetActorActressImageDetails_Result>("spGetActorActressImageDetails", pFlagParameter, pSortTypeParameter, pageNoParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, pTotalCount);
        }
    
        public virtual ObjectResult<InsertUpdateFamilyMemberDetails_Result> InsertUpdateFamilyMemberDetails(string pName, Nullable<System.DateTime> pBirthDate, string pFamilyCategoryTypeId, string pBloodGroupName, string pRelation, string pContactNo, string pEmail, string pMaritulStatus, Nullable<int> pAge, string pFamilyCardNumber, Nullable<int> pLastMemberId, string pFamilyPhoto, string pFlag)
        {
            var pNameParameter = pName != null ?
                new ObjectParameter("pName", pName) :
                new ObjectParameter("pName", typeof(string));
    
            var pBirthDateParameter = pBirthDate.HasValue ?
                new ObjectParameter("pBirthDate", pBirthDate) :
                new ObjectParameter("pBirthDate", typeof(System.DateTime));
    
            var pFamilyCategoryTypeIdParameter = pFamilyCategoryTypeId != null ?
                new ObjectParameter("pFamilyCategoryTypeId", pFamilyCategoryTypeId) :
                new ObjectParameter("pFamilyCategoryTypeId", typeof(string));
    
            var pBloodGroupNameParameter = pBloodGroupName != null ?
                new ObjectParameter("pBloodGroupName", pBloodGroupName) :
                new ObjectParameter("pBloodGroupName", typeof(string));
    
            var pRelationParameter = pRelation != null ?
                new ObjectParameter("pRelation", pRelation) :
                new ObjectParameter("pRelation", typeof(string));
    
            var pContactNoParameter = pContactNo != null ?
                new ObjectParameter("pContactNo", pContactNo) :
                new ObjectParameter("pContactNo", typeof(string));
    
            var pEmailParameter = pEmail != null ?
                new ObjectParameter("pEmail", pEmail) :
                new ObjectParameter("pEmail", typeof(string));
    
            var pMaritulStatusParameter = pMaritulStatus != null ?
                new ObjectParameter("pMaritulStatus", pMaritulStatus) :
                new ObjectParameter("pMaritulStatus", typeof(string));
    
            var pAgeParameter = pAge.HasValue ?
                new ObjectParameter("pAge", pAge) :
                new ObjectParameter("pAge", typeof(int));
    
            var pFamilyCardNumberParameter = pFamilyCardNumber != null ?
                new ObjectParameter("pFamilyCardNumber", pFamilyCardNumber) :
                new ObjectParameter("pFamilyCardNumber", typeof(string));
    
            var pLastMemberIdParameter = pLastMemberId.HasValue ?
                new ObjectParameter("pLastMemberId", pLastMemberId) :
                new ObjectParameter("pLastMemberId", typeof(int));
    
            var pFamilyPhotoParameter = pFamilyPhoto != null ?
                new ObjectParameter("pFamilyPhoto", pFamilyPhoto) :
                new ObjectParameter("pFamilyPhoto", typeof(string));
    
            var pFlagParameter = pFlag != null ?
                new ObjectParameter("pFlag", pFlag) :
                new ObjectParameter("pFlag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsertUpdateFamilyMemberDetails_Result>("InsertUpdateFamilyMemberDetails", pNameParameter, pBirthDateParameter, pFamilyCategoryTypeIdParameter, pBloodGroupNameParameter, pRelationParameter, pContactNoParameter, pEmailParameter, pMaritulStatusParameter, pAgeParameter, pFamilyCardNumberParameter, pLastMemberIdParameter, pFamilyPhotoParameter, pFlagParameter);
        }
    
        public virtual ObjectResult<InsertUpdateMemberDetails_Result> InsertUpdateMemberDetails(string pFirstName, string pLastName, string pAddress, string pZipCode, string pCity, string pState, string pCountry, string pGender, string pComment, string pCategoryTypeId, string pNationality, string pReferred, Nullable<bool> pIsActive, Nullable<int> pMembershipCategoryId, Nullable<int> pMembershipName, string pCardNumber, string pMemberCode1, string pMemberCode2, Nullable<System.DateTime> pMembershipEndDate, Nullable<decimal> pFees, Nullable<decimal> pCreditLimit, Nullable<decimal> pAvailableCredit, Nullable<decimal> pTotalTaxAmount, Nullable<decimal> pNetAmount, Nullable<decimal> pAmountPaid, Nullable<int> id, string pFlag)
        {
            var pFirstNameParameter = pFirstName != null ?
                new ObjectParameter("pFirstName", pFirstName) :
                new ObjectParameter("pFirstName", typeof(string));
    
            var pLastNameParameter = pLastName != null ?
                new ObjectParameter("pLastName", pLastName) :
                new ObjectParameter("pLastName", typeof(string));
    
            var pAddressParameter = pAddress != null ?
                new ObjectParameter("pAddress", pAddress) :
                new ObjectParameter("pAddress", typeof(string));
    
            var pZipCodeParameter = pZipCode != null ?
                new ObjectParameter("pZipCode", pZipCode) :
                new ObjectParameter("pZipCode", typeof(string));
    
            var pCityParameter = pCity != null ?
                new ObjectParameter("pCity", pCity) :
                new ObjectParameter("pCity", typeof(string));
    
            var pStateParameter = pState != null ?
                new ObjectParameter("pState", pState) :
                new ObjectParameter("pState", typeof(string));
    
            var pCountryParameter = pCountry != null ?
                new ObjectParameter("pCountry", pCountry) :
                new ObjectParameter("pCountry", typeof(string));
    
            var pGenderParameter = pGender != null ?
                new ObjectParameter("pGender", pGender) :
                new ObjectParameter("pGender", typeof(string));
    
            var pCommentParameter = pComment != null ?
                new ObjectParameter("pComment", pComment) :
                new ObjectParameter("pComment", typeof(string));
    
            var pCategoryTypeIdParameter = pCategoryTypeId != null ?
                new ObjectParameter("pCategoryTypeId", pCategoryTypeId) :
                new ObjectParameter("pCategoryTypeId", typeof(string));
    
            var pNationalityParameter = pNationality != null ?
                new ObjectParameter("pNationality", pNationality) :
                new ObjectParameter("pNationality", typeof(string));
    
            var pReferredParameter = pReferred != null ?
                new ObjectParameter("pReferred", pReferred) :
                new ObjectParameter("pReferred", typeof(string));
    
            var pIsActiveParameter = pIsActive.HasValue ?
                new ObjectParameter("pIsActive", pIsActive) :
                new ObjectParameter("pIsActive", typeof(bool));
    
            var pMembershipCategoryIdParameter = pMembershipCategoryId.HasValue ?
                new ObjectParameter("pMembershipCategoryId", pMembershipCategoryId) :
                new ObjectParameter("pMembershipCategoryId", typeof(int));
    
            var pMembershipNameParameter = pMembershipName.HasValue ?
                new ObjectParameter("pMembershipName", pMembershipName) :
                new ObjectParameter("pMembershipName", typeof(int));
    
            var pCardNumberParameter = pCardNumber != null ?
                new ObjectParameter("pCardNumber", pCardNumber) :
                new ObjectParameter("pCardNumber", typeof(string));
    
            var pMemberCode1Parameter = pMemberCode1 != null ?
                new ObjectParameter("pMemberCode1", pMemberCode1) :
                new ObjectParameter("pMemberCode1", typeof(string));
    
            var pMemberCode2Parameter = pMemberCode2 != null ?
                new ObjectParameter("pMemberCode2", pMemberCode2) :
                new ObjectParameter("pMemberCode2", typeof(string));
    
            var pMembershipEndDateParameter = pMembershipEndDate.HasValue ?
                new ObjectParameter("pMembershipEndDate", pMembershipEndDate) :
                new ObjectParameter("pMembershipEndDate", typeof(System.DateTime));
    
            var pFeesParameter = pFees.HasValue ?
                new ObjectParameter("pFees", pFees) :
                new ObjectParameter("pFees", typeof(decimal));
    
            var pCreditLimitParameter = pCreditLimit.HasValue ?
                new ObjectParameter("pCreditLimit", pCreditLimit) :
                new ObjectParameter("pCreditLimit", typeof(decimal));
    
            var pAvailableCreditParameter = pAvailableCredit.HasValue ?
                new ObjectParameter("pAvailableCredit", pAvailableCredit) :
                new ObjectParameter("pAvailableCredit", typeof(decimal));
    
            var pTotalTaxAmountParameter = pTotalTaxAmount.HasValue ?
                new ObjectParameter("pTotalTaxAmount", pTotalTaxAmount) :
                new ObjectParameter("pTotalTaxAmount", typeof(decimal));
    
            var pNetAmountParameter = pNetAmount.HasValue ?
                new ObjectParameter("pNetAmount", pNetAmount) :
                new ObjectParameter("pNetAmount", typeof(decimal));
    
            var pAmountPaidParameter = pAmountPaid.HasValue ?
                new ObjectParameter("pAmountPaid", pAmountPaid) :
                new ObjectParameter("pAmountPaid", typeof(decimal));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var pFlagParameter = pFlag != null ?
                new ObjectParameter("pFlag", pFlag) :
                new ObjectParameter("pFlag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsertUpdateMemberDetails_Result>("InsertUpdateMemberDetails", pFirstNameParameter, pLastNameParameter, pAddressParameter, pZipCodeParameter, pCityParameter, pStateParameter, pCountryParameter, pGenderParameter, pCommentParameter, pCategoryTypeIdParameter, pNationalityParameter, pReferredParameter, pIsActiveParameter, pMembershipCategoryIdParameter, pMembershipNameParameter, pCardNumberParameter, pMemberCode1Parameter, pMemberCode2Parameter, pMembershipEndDateParameter, pFeesParameter, pCreditLimitParameter, pAvailableCreditParameter, pTotalTaxAmountParameter, pNetAmountParameter, pAmountPaidParameter, idParameter, pFlagParameter);
        }
    }
}
